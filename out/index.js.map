{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oDAAwB,EAAE;AAC1B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACzB,0FAA+B;AAE/B,SAAsB,yBAAyB,CAAC,GAAW;;QACvD,IAAI;YACA,MAAM,QAAQ,GAAG,MAAM,wBAAK,EAAC,GAAG,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAQ,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YAC5C,KAAK,MAAM,GAAG,IAAI,QAAQ,EAAE;gBACxB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;aACpC;YACD,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;SAC1D;QAAC,OAAO,KAAK,EAAE;YACZ,OAAO,CAAC,KAAK,CAAC,yDAAyD,EAAE,KAAK,CAAC,CAAC;SACnF;IACL,CAAC;CAAA;AAXD,8DAWC;AAED,yBAAyB,CAAC,4CAA4C,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,GAAE,EAAE;IACnG,mBAAO,CAAC,+BAAS,CAAC;AACtB,CAAC,CAAC;;;;;;;;;;;ACnBF;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":[".././src/index.ts","../external commonjs \"dotenv\"","../external commonjs \"node-fetch\"","../webpack/bootstrap","../webpack/before-startup","../webpack/startup","../webpack/after-startup"],"sourcesContent":["require('dotenv').config()\r\nconsole.log(\"in Config\");\r\nimport fetch from \"node-fetch\";\r\n\r\nexport async function getDataAndSetEnvVariables(url: string) {\r\n    try {\r\n        const response = await fetch(url);\r\n        const jsonData:any  = await response.json();\r\n        for (const key in jsonData) {\r\n            process.env[key] = jsonData[key];\r\n        }\r\n        console.log('Environment variables set successfully!');\r\n    } catch (error) {\r\n        console.error('Error retrieving data or setting environment variables:', error);\r\n    }\r\n}\r\n\r\ngetDataAndSetEnvVariables(`https://uptimechecker2.glitch.me/clients/${process.env.clientId}`).then(()=>{\r\n    require('./index')\r\n})\r\n","module.exports = require(\"dotenv\");","module.exports = require(\"node-fetch\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}